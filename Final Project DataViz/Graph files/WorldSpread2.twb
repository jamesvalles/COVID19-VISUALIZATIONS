<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0119.2058                               -->
<workbook source-build='2019.4.2 (20194.20.0119.2058)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Outbreak_15843179001170' path='/workbooks' revision='1.8' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource caption='outbreak_confirm' inline='true' name='federated.1xffl5c17hiaw317g553j050gt59' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='outbreak_confirm' name='textscan.138ozu11aji3lv17akqx00bql9lf'>
            <connection class='textscan' directory='C:/Users/Kriti/Desktop/DePaul/Data Visualization/Project/H1N1' filename='outbreak_confirm.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.138ozu11aji3lv17akqx00bql9lf' name='outbreak_confirm.csv' table='[outbreak_confirm#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Virus' ordinal='1' />
            <column datatype='integer' name='ConfirmCases' ordinal='2' />
            <column datatype='date' name='Date' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[outbreak_confirm.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[outbreak_confirm.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Virus</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Virus]</local-name>
            <parent-name>[outbreak_confirm.csv]</parent-name>
            <remote-alias>Virus</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ConfirmCases]</local-name>
            <parent-name>[outbreak_confirm.csv]</parent-name>
            <remote-alias>ConfirmCases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[outbreak_confirm.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Log_2_confirmCases' datatype='real' name='[Calculation_1576541368881639424]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LOG([ConfirmCases], 2)' />
      </column>
      <column caption='ConfirmCase_log10' datatype='real' name='[Calculation_1576541368885481474]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='log([ConfirmCases], 10)' />
      </column>
      <column caption='Confirm Cases' datatype='integer' name='[ConfirmCases]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;     French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
          <semantic-value key='&quot;     Guadaloupe, FOC&quot;' value='&quot;Guadeloupe&quot;' />
          <semantic-value key='&quot;     Guernsey, Crown Dependency&quot;' value='&quot;Guernsey&quot;' />
          <semantic-value key='&quot;     Isle of Man, Crown Dependency&quot;' value='&quot;Isle of Man&quot;' />
          <semantic-value key='&quot;     Jersey, Crown Dependency&quot;' value='&quot;Jersey&quot;' />
          <semantic-value key='&quot;     Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
          <semantic-value key='&quot;     Netherlands Antilles, Curaçao&quot;' value='&quot;Curaçao&quot;' />
          <semantic-value key='&quot;     Netherlands Antilles, Curaçao *&quot;' value='&quot;Curaçao&quot;' />
          <semantic-value key='&quot;     Netherlands Antilles, Curaçao **&quot;' value='&quot;Curaçao&quot;' />
          <semantic-value key='&quot;     Netherlands Antilles, Sint Maarten&quot;' value='&quot;Sint Maarten (Dutch part)&quot;' />
          <semantic-value key='&quot;     Netherlands, Aruba&quot;' value='&quot;Aruba&quot;' />
          <semantic-value key='&quot;     New Caledonia, FOC&quot;' value='&quot;New Caledonia&quot;' />
          <semantic-value key='&quot;     Saint Martin, FOC&quot;' value='&quot;Saint Martin&quot;' />
          <semantic-value key='&quot;    France, New Caledonia, FOC&quot;' value='&quot;New Caledonia&quot;' />
          <semantic-value key='&quot;    French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
          <semantic-value key='&quot;    Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
          <semantic-value key='&quot;Bermuda, UKOT&quot;' value='&quot;Bermuda&quot;' />
          <semantic-value key='&quot;Bosnia and Hezegovina&quot;' value='&quot;Bosnia and Herzegovina&quot;' />
          <semantic-value key='&quot;British Virgin Islands, UKOT&quot;' value='&quot;British Virgin Islands&quot;' />
          <semantic-value key='&quot;Cap Verde&quot;' value='&quot;Cape Verde&quot;' />
          <semantic-value key='&quot;Cayman Islands, UKOT&quot;' value='&quot;Cayman Islands&quot;' />
          <semantic-value key='&quot;Cook Island&quot;' value='&quot;Cook Islands&quot;' />
          <semantic-value key='&quot;France, French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
          <semantic-value key='&quot;France, Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
          <semantic-value key='&quot;Iran, Islamic Republic&quot;' value='&quot;Iran&quot;' />
          <semantic-value key='&quot;Mainland China&quot;' value='&quot;China&quot;' />
          <semantic-value key='&quot;Netherlands, Curacao, OT&quot;' value='&quot;Curaçao&quot;' />
          <semantic-value key='&quot;United Kingdom, Isle of Man, Crown Dependency&quot;' value='&quot;Isle of Man&quot;' />
          <semantic-value key='&quot;United Kingdom, Jersey, Crown Dependency&quot;' value='&quot;Jersey&quot;' />
        </semantic-values>
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Virus]' role='dimension' type='nominal' />
      <column-instance column='[Virus]' derivation='None' name='[none:Virus:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Virus)' hidden='true' name='[Action (Country,Virus)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Virus]' />
        </groupfilter>
      </group>
      <group caption='Action (DAY(Date),Virus)' hidden='true' name='[Action (DAY(Date),Virus)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tdy:Date:ok]' />
          <groupfilter function='level-members' level='[Virus]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Kriti/Documents/My Tableau Repository/Datasources/outbreak_confirm.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/16/2020 12:17:27 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='outbreak_confirm' increment-value='%null%' refresh-type='create' rows-inserted='8000' timestamp-start='2020-03-16 00:17:27.332' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>0</ordinal>
              <family>outbreak_confirm.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>177</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Virus</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Virus]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Virus</remote-alias>
              <ordinal>1</ordinal>
              <family>outbreak_confirm.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ConfirmCases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ConfirmCases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ConfirmCases</remote-alias>
              <ordinal>2</ordinal>
              <family>outbreak_confirm.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>642</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>3</ordinal>
              <family>outbreak_confirm.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>427</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.446429' measure-ordering='alphabetic' measure-percentage='0.553571' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Virus:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Coronavirus&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;H1N1&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;SARS&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;MERS&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Ebola&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Virus' />
        <field-sort-custom-order field='ConfirmCases' />
        <field-sort-custom-order field='Calculation_1576541368885481474' />
        <field-sort-custom-order field='Calculation_1576541368881639424' />
        <field-sort-custom-order field='Date' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Offline' />
  </mapsources>
  <actions>
    <action caption='Filter1&lt;[Virus]&gt;' name='[Action1]'>
      <activation auto-clear='true' />
      <source dashboard='Dashboard 2' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='CoronaVirus'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='11'>Countries affected by  COVID-19 (Corona virus)</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>(22-Jan-2020 to 26-Feb-2020)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outbreak_confirm' name='federated.1xffl5c17hiaw317g553j050gt59' />
          </datasources>
          <mapsources>
            <mapsource name='Offline' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xffl5c17hiaw317g553j050gt59'>
            <column caption='Log_2_confirmCases' datatype='real' name='[Calculation_1576541368881639424]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LOG([ConfirmCases], 2)' />
            </column>
            <column caption='Confirm Cases' datatype='integer' name='[ConfirmCases]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;     French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;     Guadaloupe, FOC&quot;' value='&quot;Guadeloupe&quot;' />
                <semantic-value key='&quot;     Guernsey, Crown Dependency&quot;' value='&quot;Guernsey&quot;' />
                <semantic-value key='&quot;     Isle of Man, Crown Dependency&quot;' value='&quot;Isle of Man&quot;' />
                <semantic-value key='&quot;     Jersey, Crown Dependency&quot;' value='&quot;Jersey&quot;' />
                <semantic-value key='&quot;     Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao *&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao **&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Sint Maarten&quot;' value='&quot;Sint Maarten (Dutch part)&quot;' />
                <semantic-value key='&quot;     Netherlands, Aruba&quot;' value='&quot;Aruba&quot;' />
                <semantic-value key='&quot;     New Caledonia, FOC&quot;' value='&quot;New Caledonia&quot;' />
                <semantic-value key='&quot;     Saint Martin, FOC&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;    France, New Caledonia, FOC&quot;' value='&quot;New Caledonia&quot;' />
                <semantic-value key='&quot;    French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;    Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;Bermuda, UKOT&quot;' value='&quot;Bermuda&quot;' />
                <semantic-value key='&quot;Bosnia and Hezegovina&quot;' value='&quot;Bosnia and Herzegovina&quot;' />
                <semantic-value key='&quot;British Virgin Islands, UKOT&quot;' value='&quot;British Virgin Islands&quot;' />
                <semantic-value key='&quot;Cap Verde&quot;' value='&quot;Cape Verde&quot;' />
                <semantic-value key='&quot;Cayman Islands, UKOT&quot;' value='&quot;Cayman Islands&quot;' />
                <semantic-value key='&quot;Cook Island&quot;' value='&quot;Cook Islands&quot;' />
                <semantic-value key='&quot;France, French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;France, Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;Iran, Islamic Republic&quot;' value='&quot;Iran&quot;' />
                <semantic-value key='&quot;Mainland China&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Netherlands, Curacao, OT&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;United Kingdom, Isle of Man, Crown Dependency&quot;' value='&quot;Isle of Man&quot;' />
                <semantic-value key='&quot;United Kingdom, Jersey, Crown Dependency&quot;' value='&quot;Jersey&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Virus]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Virus]' derivation='None' name='[none:Virus:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1576541368881639424]' derivation='Sum' name='[sum:Calculation_1576541368881639424:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ConfirmCases]' derivation='Sum' name='[sum:ConfirmCases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]'>
            <groupfilter function='member' level='[none:Virus:nk]' member='&quot;Coronavirus&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xffl5c17hiaw317g553j050gt59].[Longitude (generated)]' field-type='quantitative' max='102771928.11491409' min='59668772.774750918' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1xffl5c17hiaw317g553j050gt59].[Latitude (generated)]' field-type='quantitative' max='17957286.557287715' min='-5980752.3808752261' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]' palette='orange_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' palette='brown_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' value='COVID-19 - Log_2_confirmCases'>
              <formatted-text>
                <run fontcolor='#000000' fontsize='11'>COVID-19</run>
                <run fontcolor='#000000'> - Log_2_confirmCases</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1xffl5c17hiaw317g553j050gt59].[none:Country:nk]' />
              <lod column='[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]' />
              <color column='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' />
              <geometry column='[federated.1xffl5c17hiaw317g553j050gt59].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1xffl5c17hiaw317g553j050gt59].[Latitude (generated)]</rows>
        <cols>[federated.1xffl5c17hiaw317g553j050gt59].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D70C619B-EA9E-4A52-850A-4B57F7A3959B}' />
    </worksheet>
    <worksheet name='Ebola'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='11'>Countries affected by Ebola  </run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>(Aug 2014 - Mar 2016)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outbreak_confirm' name='federated.1xffl5c17hiaw317g553j050gt59' />
          </datasources>
          <mapsources>
            <mapsource name='Offline' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xffl5c17hiaw317g553j050gt59'>
            <column caption='Log_2_confirmCases' datatype='real' name='[Calculation_1576541368881639424]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LOG([ConfirmCases], 2)' />
            </column>
            <column caption='Confirm Cases' datatype='integer' name='[ConfirmCases]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;     French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;     Guadaloupe, FOC&quot;' value='&quot;Guadeloupe&quot;' />
                <semantic-value key='&quot;     Guernsey, Crown Dependency&quot;' value='&quot;Guernsey&quot;' />
                <semantic-value key='&quot;     Isle of Man, Crown Dependency&quot;' value='&quot;Isle of Man&quot;' />
                <semantic-value key='&quot;     Jersey, Crown Dependency&quot;' value='&quot;Jersey&quot;' />
                <semantic-value key='&quot;     Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao *&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao **&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Sint Maarten&quot;' value='&quot;Sint Maarten (Dutch part)&quot;' />
                <semantic-value key='&quot;     Netherlands, Aruba&quot;' value='&quot;Aruba&quot;' />
                <semantic-value key='&quot;     New Caledonia, FOC&quot;' value='&quot;New Caledonia&quot;' />
                <semantic-value key='&quot;     Saint Martin, FOC&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;    France, New Caledonia, FOC&quot;' value='&quot;New Caledonia&quot;' />
                <semantic-value key='&quot;    French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;    Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;Bermuda, UKOT&quot;' value='&quot;Bermuda&quot;' />
                <semantic-value key='&quot;Bosnia and Hezegovina&quot;' value='&quot;Bosnia and Herzegovina&quot;' />
                <semantic-value key='&quot;British Virgin Islands, UKOT&quot;' value='&quot;British Virgin Islands&quot;' />
                <semantic-value key='&quot;Cap Verde&quot;' value='&quot;Cape Verde&quot;' />
                <semantic-value key='&quot;Cayman Islands, UKOT&quot;' value='&quot;Cayman Islands&quot;' />
                <semantic-value key='&quot;Cook Island&quot;' value='&quot;Cook Islands&quot;' />
                <semantic-value key='&quot;France, French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;France, Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;Iran, Islamic Republic&quot;' value='&quot;Iran&quot;' />
                <semantic-value key='&quot;Mainland China&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Netherlands, Curacao, OT&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;United Kingdom, Isle of Man, Crown Dependency&quot;' value='&quot;Isle of Man&quot;' />
                <semantic-value key='&quot;United Kingdom, Jersey, Crown Dependency&quot;' value='&quot;Jersey&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Virus]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Virus]' derivation='None' name='[none:Virus:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1576541368881639424]' derivation='Sum' name='[sum:Calculation_1576541368881639424:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ConfirmCases]' derivation='Sum' name='[sum:ConfirmCases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]'>
            <groupfilter function='member' level='[none:Virus:nk]' member='&quot;Ebola&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xffl5c17hiaw317g553j050gt59].[Longitude (generated)]' field-type='quantitative' max='61867610.902576298' min='20090188.723030362' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1xffl5c17hiaw317g553j050gt59].[Latitude (generated)]' field-type='quantitative' max='18211172.654573891' min='-5726866.2835890353' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]' palette='orange_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' value='Ebola - Log_2 of ConfirmCases'>
              <formatted-text>
                <run fontcolor='#000000' fontsize='11'>Ebola</run>
                <run fontcolor='#000000'> - Log_2 of ConfirmCases</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1xffl5c17hiaw317g553j050gt59].[none:Country:nk]' />
              <lod column='[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]' />
              <color column='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' />
              <geometry column='[federated.1xffl5c17hiaw317g553j050gt59].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1xffl5c17hiaw317g553j050gt59].[Latitude (generated)]</rows>
        <cols>[federated.1xffl5c17hiaw317g553j050gt59].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A9C6748F-D70D-46D7-959F-B105C54F6BEB}' />
    </worksheet>
    <worksheet name='H1N1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='11'>Countries affected by H1N1 (Swine Flu)</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='10'> in 2009</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outbreak_confirm' name='federated.1xffl5c17hiaw317g553j050gt59' />
          </datasources>
          <mapsources>
            <mapsource name='Offline' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xffl5c17hiaw317g553j050gt59'>
            <column caption='Log_2_confirmCases' datatype='real' name='[Calculation_1576541368881639424]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LOG([ConfirmCases], 2)' />
            </column>
            <column caption='Confirm Cases' datatype='integer' name='[ConfirmCases]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;     French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;     Guadaloupe, FOC&quot;' value='&quot;Guadeloupe&quot;' />
                <semantic-value key='&quot;     Guernsey, Crown Dependency&quot;' value='&quot;Guernsey&quot;' />
                <semantic-value key='&quot;     Isle of Man, Crown Dependency&quot;' value='&quot;Isle of Man&quot;' />
                <semantic-value key='&quot;     Jersey, Crown Dependency&quot;' value='&quot;Jersey&quot;' />
                <semantic-value key='&quot;     Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao *&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao **&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Sint Maarten&quot;' value='&quot;Sint Maarten (Dutch part)&quot;' />
                <semantic-value key='&quot;     Netherlands, Aruba&quot;' value='&quot;Aruba&quot;' />
                <semantic-value key='&quot;     New Caledonia, FOC&quot;' value='&quot;New Caledonia&quot;' />
                <semantic-value key='&quot;     Saint Martin, FOC&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;    France, New Caledonia, FOC&quot;' value='&quot;New Caledonia&quot;' />
                <semantic-value key='&quot;    French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;    Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;Bermuda, UKOT&quot;' value='&quot;Bermuda&quot;' />
                <semantic-value key='&quot;Bosnia and Hezegovina&quot;' value='&quot;Bosnia and Herzegovina&quot;' />
                <semantic-value key='&quot;British Virgin Islands, UKOT&quot;' value='&quot;British Virgin Islands&quot;' />
                <semantic-value key='&quot;Cap Verde&quot;' value='&quot;Cape Verde&quot;' />
                <semantic-value key='&quot;Cayman Islands, UKOT&quot;' value='&quot;Cayman Islands&quot;' />
                <semantic-value key='&quot;Cook Island&quot;' value='&quot;Cook Islands&quot;' />
                <semantic-value key='&quot;France, French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;France, Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;Iran, Islamic Republic&quot;' value='&quot;Iran&quot;' />
                <semantic-value key='&quot;Mainland China&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Netherlands, Curacao, OT&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;United Kingdom, Isle of Man, Crown Dependency&quot;' value='&quot;Isle of Man&quot;' />
                <semantic-value key='&quot;United Kingdom, Jersey, Crown Dependency&quot;' value='&quot;Jersey&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Virus]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Virus]' derivation='None' name='[none:Virus:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1576541368881639424]' derivation='Sum' name='[sum:Calculation_1576541368881639424:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ConfirmCases]' derivation='Sum' name='[sum:ConfirmCases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]'>
            <groupfilter function='member' level='[none:Virus:nk]' member='&quot;H1N1&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xffl5c17hiaw317g553j050gt59].[Longitude (generated)]' field-type='quantitative' max='65742558.997352958' min='13901504.012047505' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1xffl5c17hiaw317g553j050gt59].[Latitude (generated)]' field-type='quantitative' max='19234113.802019522' min='-9730461.4032934923' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='normal' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' value='H1N1 - Log_2 of  ConfirmCases'>
              <formatted-text>
                <run>H1N1 -</run>
                <run fontsize='9'> Log_2 of  ConfirmCases</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1xffl5c17hiaw317g553j050gt59].[none:Country:nk]' />
              <lod column='[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]' />
              <color column='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' />
              <geometry column='[federated.1xffl5c17hiaw317g553j050gt59].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1xffl5c17hiaw317g553j050gt59].[Latitude (generated)]</rows>
        <cols>[federated.1xffl5c17hiaw317g553j050gt59].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2BE061CE-0C75-424C-A9A4-2A0D1DD37E5F}' />
    </worksheet>
    <worksheet name='MERS'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='11'>Countries affected by MERS</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>(Feb 2012 - Oct 2016)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outbreak_confirm' name='federated.1xffl5c17hiaw317g553j050gt59' />
          </datasources>
          <mapsources>
            <mapsource name='Offline' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xffl5c17hiaw317g553j050gt59'>
            <column caption='Log_2_confirmCases' datatype='real' name='[Calculation_1576541368881639424]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LOG([ConfirmCases], 2)' />
            </column>
            <column caption='Confirm Cases' datatype='integer' name='[ConfirmCases]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;     French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;     Guadaloupe, FOC&quot;' value='&quot;Guadeloupe&quot;' />
                <semantic-value key='&quot;     Guernsey, Crown Dependency&quot;' value='&quot;Guernsey&quot;' />
                <semantic-value key='&quot;     Isle of Man, Crown Dependency&quot;' value='&quot;Isle of Man&quot;' />
                <semantic-value key='&quot;     Jersey, Crown Dependency&quot;' value='&quot;Jersey&quot;' />
                <semantic-value key='&quot;     Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao *&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao **&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Sint Maarten&quot;' value='&quot;Sint Maarten (Dutch part)&quot;' />
                <semantic-value key='&quot;     Netherlands, Aruba&quot;' value='&quot;Aruba&quot;' />
                <semantic-value key='&quot;     New Caledonia, FOC&quot;' value='&quot;New Caledonia&quot;' />
                <semantic-value key='&quot;     Saint Martin, FOC&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;    France, New Caledonia, FOC&quot;' value='&quot;New Caledonia&quot;' />
                <semantic-value key='&quot;    French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;    Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;Bermuda, UKOT&quot;' value='&quot;Bermuda&quot;' />
                <semantic-value key='&quot;Bosnia and Hezegovina&quot;' value='&quot;Bosnia and Herzegovina&quot;' />
                <semantic-value key='&quot;British Virgin Islands, UKOT&quot;' value='&quot;British Virgin Islands&quot;' />
                <semantic-value key='&quot;Cap Verde&quot;' value='&quot;Cape Verde&quot;' />
                <semantic-value key='&quot;Cayman Islands, UKOT&quot;' value='&quot;Cayman Islands&quot;' />
                <semantic-value key='&quot;Cook Island&quot;' value='&quot;Cook Islands&quot;' />
                <semantic-value key='&quot;France, French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;France, Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;Iran, Islamic Republic&quot;' value='&quot;Iran&quot;' />
                <semantic-value key='&quot;Mainland China&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Netherlands, Curacao, OT&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;United Kingdom, Isle of Man, Crown Dependency&quot;' value='&quot;Isle of Man&quot;' />
                <semantic-value key='&quot;United Kingdom, Jersey, Crown Dependency&quot;' value='&quot;Jersey&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Virus]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Virus]' derivation='None' name='[none:Virus:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1576541368881639424]' derivation='Sum' name='[sum:Calculation_1576541368881639424:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ConfirmCases]' derivation='Sum' name='[sum:ConfirmCases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]'>
            <groupfilter function='member' level='[none:Virus:nk]' member='&quot;MERS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xffl5c17hiaw317g553j050gt59].[Longitude (generated)]' field-type='quantitative' max='59664918.443989292' min='21638007.106919784' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1xffl5c17hiaw317g553j050gt59].[Latitude (generated)]' field-type='quantitative' max='16285927.305950264' min='-5695323.1936416905' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' value='MERS - Log_2_confirmCases &#10;'>
              <formatted-text>
                <run fontcolor='#000000' fontsize='11'>MERS</run>
                <run fontcolor='#000000'> - Log_2_confirmCases </run>
                <run>Æ&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1xffl5c17hiaw317g553j050gt59].[none:Country:nk]' />
              <lod column='[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]' />
              <color column='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' />
              <geometry column='[federated.1xffl5c17hiaw317g553j050gt59].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1xffl5c17hiaw317g553j050gt59].[Latitude (generated)]</rows>
        <cols>[federated.1xffl5c17hiaw317g553j050gt59].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B69CA634-0ED9-431B-82FD-2377AF8B69FB}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontsize='11'>Countries Affected </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outbreak_confirm' name='federated.1xffl5c17hiaw317g553j050gt59' />
          </datasources>
          <mapsources>
            <mapsource name='Offline' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xffl5c17hiaw317g553j050gt59'>
            <column caption='Log_2_confirmCases' datatype='real' name='[Calculation_1576541368881639424]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LOG([ConfirmCases], 2)' />
            </column>
            <column caption='Confirm Cases' datatype='integer' name='[ConfirmCases]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;     French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;     Guadaloupe, FOC&quot;' value='&quot;Guadeloupe&quot;' />
                <semantic-value key='&quot;     Guernsey, Crown Dependency&quot;' value='&quot;Guernsey&quot;' />
                <semantic-value key='&quot;     Isle of Man, Crown Dependency&quot;' value='&quot;Isle of Man&quot;' />
                <semantic-value key='&quot;     Jersey, Crown Dependency&quot;' value='&quot;Jersey&quot;' />
                <semantic-value key='&quot;     Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao *&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao **&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Sint Maarten&quot;' value='&quot;Sint Maarten (Dutch part)&quot;' />
                <semantic-value key='&quot;     Netherlands, Aruba&quot;' value='&quot;Aruba&quot;' />
                <semantic-value key='&quot;     New Caledonia, FOC&quot;' value='&quot;New Caledonia&quot;' />
                <semantic-value key='&quot;     Saint Martin, FOC&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;    France, New Caledonia, FOC&quot;' value='&quot;New Caledonia&quot;' />
                <semantic-value key='&quot;    French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;    Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;Bermuda, UKOT&quot;' value='&quot;Bermuda&quot;' />
                <semantic-value key='&quot;Bosnia and Hezegovina&quot;' value='&quot;Bosnia and Herzegovina&quot;' />
                <semantic-value key='&quot;British Virgin Islands, UKOT&quot;' value='&quot;British Virgin Islands&quot;' />
                <semantic-value key='&quot;Cap Verde&quot;' value='&quot;Cape Verde&quot;' />
                <semantic-value key='&quot;Cayman Islands, UKOT&quot;' value='&quot;Cayman Islands&quot;' />
                <semantic-value key='&quot;Cook Island&quot;' value='&quot;Cook Islands&quot;' />
                <semantic-value key='&quot;France, French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;France, Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;Iran, Islamic Republic&quot;' value='&quot;Iran&quot;' />
                <semantic-value key='&quot;Mainland China&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Netherlands, Curacao, OT&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;United Kingdom, Isle of Man, Crown Dependency&quot;' value='&quot;Isle of Man&quot;' />
                <semantic-value key='&quot;United Kingdom, Jersey, Crown Dependency&quot;' value='&quot;Jersey&quot;' />
              </semantic-values>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Virus]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Virus]' derivation='None' name='[none:Virus:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1576541368881639424]' derivation='Sum' name='[sum:Calculation_1576541368881639424:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ConfirmCases]' derivation='Sum' name='[sum:ConfirmCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xffl5c17hiaw317g553j050gt59].[Action (Country,Virus)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Virus]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1xffl5c17hiaw317g553j050gt59].[Action (DAY(Date),Virus)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Date:ok]' />
              <groupfilter function='level-members' level='[Virus]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Virus:nk]' member='&quot;H1N1&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]</column>
            <column>[federated.1xffl5c17hiaw317g553j050gt59].[Action (Country,Virus)]</column>
            <column>[federated.1xffl5c17hiaw317g553j050gt59].[Action (DAY(Date),Virus)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xffl5c17hiaw317g553j050gt59].[Longitude (generated)]' field-type='quantitative' max='142765234.37851208' min='100262114.42566709' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1xffl5c17hiaw317g553j050gt59].[Latitude (generated)]' field-type='quantitative' max='16756803.042963568' min='-7078802.9006600315' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' value='Log_2_confirmCases &#10;'>
              <formatted-text>
                <run>Log_2_confirmCases &#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1xffl5c17hiaw317g553j050gt59].[none:Country:nk]' />
              <lod column='[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]' />
              <color column='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' />
              <geometry column='[federated.1xffl5c17hiaw317g553j050gt59].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1xffl5c17hiaw317g553j050gt59].[Latitude (generated)]</rows>
        <cols>[federated.1xffl5c17hiaw317g553j050gt59].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{85DBEB4D-D1F8-4D7E-80D3-10E1EBF07BF4}' />
    </worksheet>
    <worksheet name='SARS'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='11'>Countries affected by SARS</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='10'> in 2003</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outbreak_confirm' name='federated.1xffl5c17hiaw317g553j050gt59' />
          </datasources>
          <mapsources>
            <mapsource name='Offline' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xffl5c17hiaw317g553j050gt59'>
            <column caption='Log_2_confirmCases' datatype='real' name='[Calculation_1576541368881639424]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LOG([ConfirmCases], 2)' />
            </column>
            <column caption='Confirm Cases' datatype='integer' name='[ConfirmCases]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;     French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;     Guadaloupe, FOC&quot;' value='&quot;Guadeloupe&quot;' />
                <semantic-value key='&quot;     Guernsey, Crown Dependency&quot;' value='&quot;Guernsey&quot;' />
                <semantic-value key='&quot;     Isle of Man, Crown Dependency&quot;' value='&quot;Isle of Man&quot;' />
                <semantic-value key='&quot;     Jersey, Crown Dependency&quot;' value='&quot;Jersey&quot;' />
                <semantic-value key='&quot;     Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao *&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao **&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Sint Maarten&quot;' value='&quot;Sint Maarten (Dutch part)&quot;' />
                <semantic-value key='&quot;     Netherlands, Aruba&quot;' value='&quot;Aruba&quot;' />
                <semantic-value key='&quot;     New Caledonia, FOC&quot;' value='&quot;New Caledonia&quot;' />
                <semantic-value key='&quot;     Saint Martin, FOC&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;    France, New Caledonia, FOC&quot;' value='&quot;New Caledonia&quot;' />
                <semantic-value key='&quot;    French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;    Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;Bermuda, UKOT&quot;' value='&quot;Bermuda&quot;' />
                <semantic-value key='&quot;Bosnia and Hezegovina&quot;' value='&quot;Bosnia and Herzegovina&quot;' />
                <semantic-value key='&quot;British Virgin Islands, UKOT&quot;' value='&quot;British Virgin Islands&quot;' />
                <semantic-value key='&quot;Cap Verde&quot;' value='&quot;Cape Verde&quot;' />
                <semantic-value key='&quot;Cayman Islands, UKOT&quot;' value='&quot;Cayman Islands&quot;' />
                <semantic-value key='&quot;Cook Island&quot;' value='&quot;Cook Islands&quot;' />
                <semantic-value key='&quot;France, French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;France, Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;Iran, Islamic Republic&quot;' value='&quot;Iran&quot;' />
                <semantic-value key='&quot;Mainland China&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Netherlands, Curacao, OT&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;United Kingdom, Isle of Man, Crown Dependency&quot;' value='&quot;Isle of Man&quot;' />
                <semantic-value key='&quot;United Kingdom, Jersey, Crown Dependency&quot;' value='&quot;Jersey&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Virus]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Virus]' derivation='None' name='[none:Virus:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1576541368881639424]' derivation='Sum' name='[sum:Calculation_1576541368881639424:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ConfirmCases]' derivation='Sum' name='[sum:ConfirmCases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]'>
            <groupfilter function='member' level='[none:Virus:nk]' member='&quot;SARS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xffl5c17hiaw317g553j050gt59].[Longitude (generated)]' field-type='quantitative' max='62478073.139071092' min='20700650.95952516' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1xffl5c17hiaw317g553j050gt59].[Latitude (generated)]' field-type='quantitative' max='17571329.042156268' min='-6366709.8960066689' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' value='SARS - Log_2_confirmCases &#10;'>
              <formatted-text>
                <run fontcolor='#000000' fontsize='11'>SARS</run>
                <run fontcolor='#000000'> - Log_2_confirmCases </run>
                <run>Æ&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1xffl5c17hiaw317g553j050gt59].[none:Country:nk]' />
              <lod column='[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]' />
              <color column='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' />
              <geometry column='[federated.1xffl5c17hiaw317g553j050gt59].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1xffl5c17hiaw317g553j050gt59].[Latitude (generated)]</rows>
        <cols>[federated.1xffl5c17hiaw317g553j050gt59].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{BB70B2FE-F3BF-4524-A78F-C185D9F8A41E}' />
    </worksheet>
    <worksheet name='bar_graph'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000'>Confirmed Cases by countries (using Exponential Scale)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outbreak_confirm' name='federated.1xffl5c17hiaw317g553j050gt59' />
          </datasources>
          <datasource-dependencies datasource='federated.1xffl5c17hiaw317g553j050gt59'>
            <column caption='Confirm Cases' datatype='integer' name='[ConfirmCases]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;     French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;     Guadaloupe, FOC&quot;' value='&quot;Guadeloupe&quot;' />
                <semantic-value key='&quot;     Guernsey, Crown Dependency&quot;' value='&quot;Guernsey&quot;' />
                <semantic-value key='&quot;     Isle of Man, Crown Dependency&quot;' value='&quot;Isle of Man&quot;' />
                <semantic-value key='&quot;     Jersey, Crown Dependency&quot;' value='&quot;Jersey&quot;' />
                <semantic-value key='&quot;     Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao *&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao **&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Sint Maarten&quot;' value='&quot;Sint Maarten (Dutch part)&quot;' />
                <semantic-value key='&quot;     Netherlands, Aruba&quot;' value='&quot;Aruba&quot;' />
                <semantic-value key='&quot;     New Caledonia, FOC&quot;' value='&quot;New Caledonia&quot;' />
                <semantic-value key='&quot;     Saint Martin, FOC&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;    France, New Caledonia, FOC&quot;' value='&quot;New Caledonia&quot;' />
                <semantic-value key='&quot;    French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;    Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;Bermuda, UKOT&quot;' value='&quot;Bermuda&quot;' />
                <semantic-value key='&quot;Bosnia and Hezegovina&quot;' value='&quot;Bosnia and Herzegovina&quot;' />
                <semantic-value key='&quot;British Virgin Islands, UKOT&quot;' value='&quot;British Virgin Islands&quot;' />
                <semantic-value key='&quot;Cap Verde&quot;' value='&quot;Cape Verde&quot;' />
                <semantic-value key='&quot;Cayman Islands, UKOT&quot;' value='&quot;Cayman Islands&quot;' />
                <semantic-value key='&quot;Cook Island&quot;' value='&quot;Cook Islands&quot;' />
                <semantic-value key='&quot;France, French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;France, Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;Iran, Islamic Republic&quot;' value='&quot;Iran&quot;' />
                <semantic-value key='&quot;Mainland China&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Netherlands, Curacao, OT&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;United Kingdom, Isle of Man, Crown Dependency&quot;' value='&quot;Isle of Man&quot;' />
                <semantic-value key='&quot;United Kingdom, Jersey, Crown Dependency&quot;' value='&quot;Jersey&quot;' />
              </semantic-values>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Virus]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='Attribute' name='[attr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Virus]' derivation='None' name='[none:Virus:nk]' pivot='key' type='nominal' />
            <column-instance column='[ConfirmCases]' derivation='Sum' name='[sum:ConfirmCases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xffl5c17hiaw317g553j050gt59].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1xffl5c17hiaw317g553j050gt59].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Virus:nk]' member='&quot;H1N1&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1xffl5c17hiaw317g553j050gt59].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]</column>
            <column>[federated.1xffl5c17hiaw317g553j050gt59].[Action (Country)]</column>
            <column>[federated.1xffl5c17hiaw317g553j050gt59].[none:Country:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
            <format attr='auto-subtitle' class='0' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]' scope='rows' value='Exponential' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='16' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]' value='bold' />
            <format attr='font-size' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]' value='9' />
            <format attr='font-size' field='[federated.1xffl5c17hiaw317g553j050gt59].[none:Country:nk]' value='9' />
            <format attr='font-weight' field='[federated.1xffl5c17hiaw317g553j050gt59].[none:Country:nk]' value='bold' />
            <format attr='font-size' field='[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]' value='9' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='true' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='color' value='#000000' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Bar' />
            <encodings>
              <tooltip column='[federated.1xffl5c17hiaw317g553j050gt59].[attr:Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows onTop='true'>[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]</rows>
        <cols>([federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk] / [federated.1xffl5c17hiaw317g553j050gt59].[none:Country:nk])</cols>
      </table>
      <simple-id uuid='{82610C67-44A5-4510-9BE7-220DAB5B9E48}' />
    </worksheet>
    <worksheet name='linegraph'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000'>Number of cases by Recorded Dates</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outbreak_confirm' name='federated.1xffl5c17hiaw317g553j050gt59' />
          </datasources>
          <datasource-dependencies datasource='federated.1xffl5c17hiaw317g553j050gt59'>
            <column caption='Confirm Cases' datatype='integer' name='[ConfirmCases]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;     French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;     Guadaloupe, FOC&quot;' value='&quot;Guadeloupe&quot;' />
                <semantic-value key='&quot;     Guernsey, Crown Dependency&quot;' value='&quot;Guernsey&quot;' />
                <semantic-value key='&quot;     Isle of Man, Crown Dependency&quot;' value='&quot;Isle of Man&quot;' />
                <semantic-value key='&quot;     Jersey, Crown Dependency&quot;' value='&quot;Jersey&quot;' />
                <semantic-value key='&quot;     Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao *&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Curaçao **&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;     Netherlands Antilles, Sint Maarten&quot;' value='&quot;Sint Maarten (Dutch part)&quot;' />
                <semantic-value key='&quot;     Netherlands, Aruba&quot;' value='&quot;Aruba&quot;' />
                <semantic-value key='&quot;     New Caledonia, FOC&quot;' value='&quot;New Caledonia&quot;' />
                <semantic-value key='&quot;     Saint Martin, FOC&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;    France, New Caledonia, FOC&quot;' value='&quot;New Caledonia&quot;' />
                <semantic-value key='&quot;    French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;    Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;Bermuda, UKOT&quot;' value='&quot;Bermuda&quot;' />
                <semantic-value key='&quot;Bosnia and Hezegovina&quot;' value='&quot;Bosnia and Herzegovina&quot;' />
                <semantic-value key='&quot;British Virgin Islands, UKOT&quot;' value='&quot;British Virgin Islands&quot;' />
                <semantic-value key='&quot;Cap Verde&quot;' value='&quot;Cape Verde&quot;' />
                <semantic-value key='&quot;Cayman Islands, UKOT&quot;' value='&quot;Cayman Islands&quot;' />
                <semantic-value key='&quot;Cook Island&quot;' value='&quot;Cook Islands&quot;' />
                <semantic-value key='&quot;France, French Polynesia, FOC&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;France, Martinique, FOC&quot;' value='&quot;Martinique&quot;' />
                <semantic-value key='&quot;Iran, Islamic Republic&quot;' value='&quot;Iran&quot;' />
                <semantic-value key='&quot;Mainland China&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Netherlands, Curacao, OT&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;United Kingdom, Isle of Man, Crown Dependency&quot;' value='&quot;Isle of Man&quot;' />
                <semantic-value key='&quot;United Kingdom, Jersey, Crown Dependency&quot;' value='&quot;Jersey&quot;' />
              </semantic-values>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Virus]' role='dimension' type='nominal' />
            <column-instance column='[Virus]' derivation='None' name='[none:Virus:nk]' pivot='key' type='nominal' />
            <column-instance column='[ConfirmCases]' derivation='Sum' name='[sum:ConfirmCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xffl5c17hiaw317g553j050gt59].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1xffl5c17hiaw317g553j050gt59].[Action (Country,Virus)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Virus]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Virus:nk]' member='&quot;H1N1&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]</column>
            <column>[federated.1xffl5c17hiaw317g553j050gt59].[Action (Country,Virus)]</column>
            <column>[federated.1xffl5c17hiaw317g553j050gt59].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1xffl5c17hiaw317g553j050gt59].[tdy:Date:qk]' scope='cols' value='Date' />
            <format attr='title' class='0' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]' scope='rows' value='Confirmed Cases' />
            <format attr='tick-color' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='16' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]' value='bold' />
            <format attr='font-size' field='[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]' value='9' />
            <format attr='font-weight' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]' value='bold' />
            <format attr='font-size' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]' value='9' />
            <format attr='font-weight' field='[federated.1xffl5c17hiaw317g553j050gt59].[tdy:Date:qk]' value='bold' />
            <format attr='font-size' field='[federated.1xffl5c17hiaw317g553j050gt59].[tdy:Date:qk]' value='8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='true' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]' value='10' />
            <format attr='font-size' field='[federated.1xffl5c17hiaw317g553j050gt59].[tdy:Date:qk]' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3953038454055786' />
                <format attr='mark-color' value='#4d8b44' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows onTop='true'>[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]</rows>
        <cols>([federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk] * [federated.1xffl5c17hiaw317g553j050gt59].[tdy:Date:qk])</cols>
      </table>
      <simple-id uuid='{D45AAE1F-412D-4419-9E8C-D46A2382A6E0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='5' param='vert' type='layout-flow' w='99034' x='483' y='929'>
            <zone h='98142' id='6' type='layout-basic' w='99034' x='483' y='929' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='45761' id='7' name='H1N1' w='33977' x='483' y='1394' />
        <zone h='46341' id='9' name='CoronaVirus' w='35486' x='483' y='50407' />
        <zone h='7782' id='10' name='H1N1' pane-specification-id='0' param='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' type='color' w='20519' x='77791' y='54588' />
        <zone h='45645' id='11' name='Ebola' w='32830' x='34641' y='1394' />
        <zone h='45645' id='12' name='MERS' w='35244' x='67652' y='1278' />
        <zone h='10221' id='13' name='Ebola' pane-specification-id='0' param='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' type='color' w='20640' x='77852' y='61440' />
        <zone h='10221' id='14' name='MERS' pane-specification-id='0' param='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' type='color' w='20700' x='77852' y='68409' />
        <zone h='10221' id='15' name='CoronaVirus' pane-specification-id='0' param='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' type='color' w='20519' x='77972' y='75726' />
        <zone h='46458' id='16' name='SARS' w='35425' x='36210' y='50407' />
        <zone h='10221' id='17' name='SARS' pane-specification-id='0' param='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' type='color' w='20459' x='78153' y='82927' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1800' minheight='1800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='123' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='122' param='vert' type='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='280' h='45645' id='12' is-fixed='true' name='MERS' w='35244' x='67652' y='1278'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10221' id='14' name='MERS' pane-specification-id='0' param='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' type='color' w='20700' x='77852' y='68409'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45761' id='7' is-fixed='true' name='H1N1' w='33977' x='483' y='1394'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7782' id='10' name='H1N1' pane-specification-id='0' param='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' type='color' w='20519' x='77791' y='54588'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45645' id='11' is-fixed='true' name='Ebola' w='32830' x='34641' y='1394'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10221' id='13' name='Ebola' pane-specification-id='0' param='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' type='color' w='20640' x='77852' y='61440'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46341' id='9' is-fixed='true' name='CoronaVirus' w='35486' x='483' y='50407'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10221' id='15' name='CoronaVirus' pane-specification-id='0' param='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' type='color' w='20519' x='77972' y='75726'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46458' id='16' is-fixed='true' name='SARS' w='35425' x='36210' y='50407'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10221' id='17' name='SARS' pane-specification-id='0' param='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' type='color' w='20459' x='78153' y='82927'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3964D619-087B-4C87-8195-0C5BFD3A9ACB}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#1b1b1b' fontsize='12'>Geographic Spread</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f55b' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='outbreak_confirm' name='federated.1xffl5c17hiaw317g553j050gt59' />
      </datasources>
      <datasource-dependencies datasource='federated.1xffl5c17hiaw317g553j050gt59'>
        <column datatype='string' name='[Virus]' role='dimension' type='nominal' />
        <column-instance column='[Virus]' derivation='None' name='[none:Virus:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='15' param='horz' type='layout-flow' w='99034' x='483' y='929'>
            <zone h='98142' id='12' layout-strategy-id='distribute-evenly' param='vert' type='layout-flow' w='99034' x='483' y='929'>
              <zone h='98142' id='13' type='title' w='99034' x='483' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='65157' id='3' name='Map' w='57634' x='905' y='2555' />
        <zone h='26597' id='5' name='bar_graph' w='98612' x='785' y='72822' />
        <zone h='45180' id='50' name='linegraph' w='40072' x='59083' y='22764' />
        <zone fixed-size='152' h='19396' id='14' is-fixed='true' param='vert' type='layout-flow' w='9173' x='88835' y='3833'>
          <zone h='19047' id='17' mode='radiolist' name='bar_graph' param='[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]' type='filter' values='database' w='9173' x='88835' y='3833'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='4646' id='101' name='Map' pane-specification-id='0' param='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' type='color' w='19252' x='785' y='68060' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontcolor='#1b1b1b' fontsize='12'>Geographic Spread</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='125' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='124' param='vert' type='layout-flow' w='99034' x='483' y='929'>
                <zone h='98142' id='13' type='title' w='99034' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='65157' id='3' is-fixed='true' name='Map' w='57634' x='905' y='2555'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4646' id='101' name='Map' pane-specification-id='0' param='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' type='color' w='19252' x='785' y='68060'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45180' id='50' is-fixed='true' name='linegraph' w='40072' x='59083' y='22764'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19047' id='17' mode='dropdown' name='bar_graph' param='[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]' type='filter' values='database' w='9173' x='88835' y='3833'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='212' h='26597' id='5' is-fixed='true' name='bar_graph' w='98612' x='785' y='72822'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B948A128-288C-4D74-BB9B-581BDEF1D3A1}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='bar_graph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xffl5c17hiaw317g553j050gt59].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDBDB56E-1733-49AB-96CE-21EA5138449F}' />
    </window>
    <window class='worksheet' name='linegraph'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{EAC5BACA-86BB-466A-9CF1-850C7C2BD9CA}' />
    </window>
    <window class='worksheet' name='H1N1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{A3D5BB3C-CD92-4168-8EFB-E811E14B461F}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{9BA6866F-F160-4CA5-92D8-6CFCD8BCAD44}' />
    </window>
    <window class='worksheet' name='SARS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{49CF4451-6E12-409B-9278-72CF97918D96}' />
    </window>
    <window class='worksheet' name='MERS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E0C1A610-D4BB-445A-9617-E52AC99DD9A4}' />
    </window>
    <window class='worksheet' name='CoronaVirus'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{D86172F5-F522-44B7-B7BD-69A1006DA081}' />
    </window>
    <window class='worksheet' name='Ebola'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{F0D5B5B0-7E30-454B-BEE8-A8E75F7BA94A}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='CoronaVirus'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Ebola'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='H1N1'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='MERS'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='SARS'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
      <simple-id uuid='{84076B05-9B73-4030-8DA0-973944ED5F3B}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1xffl5c17hiaw317g553j050gt59].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1xffl5c17hiaw317g553j050gt59].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1xffl5c17hiaw317g553j050gt59].[none:Country:nk]</field>
                    <field>[federated.1xffl5c17hiaw317g553j050gt59].[sum:Calculation_1576541368881639424:qk]</field>
                    <field>[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]</field>
                    <field>[federated.1xffl5c17hiaw317g553j050gt59].[Geometry (generated)]</field>
                    <field>[federated.1xffl5c17hiaw317g553j050gt59].[Latitude (generated)]</field>
                    <field>[federated.1xffl5c17hiaw317g553j050gt59].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>0.0</value>
                  <value>1</value>
                  <value>&quot;POLYGON((61.2753 35.6056,61.3122 35.621,61.3661 35.6257,61.3896 35.5653,61.4522 35.5203,61.5916 35.4359,61.7827 35.4116,61.9691 35.4542,62.061 35.4341,62.1497 35.3437,62.2662 35.295,62.2894 35.2585,62.302 35.1658,62.317 35.139,62.4776 35.2789,62.5427 35.2584,62.5496 35.2365,62.5845 35.2268,62.6539 35.2318,62.7409 35.2502,62.7653 35.2887,62.8246 35.3012,62.852 35.3159,62.8774 35.3479,62.9365 35.3814,63.0129 35.4153,63.0743 35.4142,63.1094 35.4495,63.1201 35.4927,63.1138 35.5162,63.1288 35.5456,63.1032 35.5608,63.1093 35.585,63.0963 35.6202,63.1117 35.6338,63.2469 35.6817,63.2411 35.7036,63.1944 35.713,63.1876 35.7321,63.1462 35.7642,63.1097 35.826,63.1202 35.8635,63.3059 35.8577,63.5352 35.9033,63.5704 35.951,63.7054 35.968,63.9873 36.0367,64.064 36.0004,64.0598 36.0761,64.0646 36.1003,64.09 36.1255,64.1117 36.1231,64.1618 36.1592,64.2085 36.1672,64.2411 36.1532,64.2848 36.1542,64.3148 36.2043,64.3583 36.2247,64.4469 36.2428,64.5801 36.3513,64.5898 36.3782,64.6361 36.4435,64.6194 36.5787,64.6192 36.6388,64.7474 36.8527,64.7968 36.924,64.7538 37.1102,64.7613 37.1159,64.9899 37.2183,65.1284 37.2459,65.1879 37.2371,65.2294 37.2498,65.2694 37.2333,65.5308 37.2387,65.642 37.341,65.6462 37.4398,65.7048 37.5383,65.7569 37.5383,65.824 37.4979,65.891 37.4769,65.9511 37.4731,66.0045 37.4461,66.0695 37.4496,66.1172 37.4036,66.1552 37.3991,66.1676 37.3686,66.2325 37.3673,66.2615 37.3448,66.322 37.3221,66.3409 37.3334,66.386 37.3273,66.4142 37.347,66.4778 37.3285,66.5441 37.3472,66.5946 37.369,66.6244 37.3324,66.6694 37.331,66.6973 37.359,66.8026 37.364,66.8449 37.3561,66.8966 37.3722,66.9281 37.3929,66.9756 37.3888,66.9962 37.3755,67.0453 37.3805,67.1126 37.3293,67.1103 37.291,67.1381 37.2652,67.1942 37.2578,67.2297 37.2308,67.2711 37.1818,67.3822 37.2186,67.4488 37.2346,67.4782 37.2618,67.523 37.2653,67.5613 37.2213,67.6372 37.2418,67.7357 37.2155,67.7768 37.1847,67.7893 37.1733,67.7845 37.114,67.7952 37.0824,67.8398 37.0642,67.8908 37.0634,67.8959 37.0332,67.9492 36.991,67.9544 36.97,67.9963 36.9548,68.0211 36.9229,68.1214 36.9618,68.1507 36.9967,68.185 37.0207,68.2114 37.0036,68.2593 37.0071,68.2822 37.0194,68.2952 37.1053,68.3431 37.1082,68.373 37.0991,68.4225 37.1099,68.4307 37.1447,68.4586 37.1412,68.4833 37.1583,68.5399 37.164,68.569 37.1878,68.6435 37.2072,68.6577 37.2486,68.6857 37.2804,68.726 37.2692,68.775 37.2882,68.7906 37.2829,68.8212 37.314,68.8697 37.3031,68.8933 37.2732,68.9306 37.2809,68.8886 37.3247,68.9611 37.3264,68.9994 37.2996,69.0498 37.2447,69.0888 37.2235,69.1039 37.1901,69.1418 37.161,69.2022 37.1363,69.2411 37.0982,69.2668 37.0961,69.2899 37.1145,69.3199 37.1166,69.3752 37.1672,69.3988 37.1643,69.4539 37.2306,69.4167 37.2281,69.4075 37.3137,69.3822 37.3188,69.3734 37.4041,69.3952 37.4502,69.43 37.4698,69.4735 37.5205,69.4923 37.5226,69.5216 37.578,69.5894 37.5823,69.6258 37.5742,69.7195 37.5795,69.749 37.588,69.8101 37.5687,69.8381 37.6028,69.9055 37.6181,69.9405 37.608,69.9524 37.5683,69.994 37.5672,70.0194 37.5482,70.0574 37.5482,70.1142 37.524,70.1695 37.5277,70.1813 37.5555,70.2227 37.5846,70.2176 37.6064,70.2661 37.6109,70.2621 37.6469,70.298 37.7367,70.2792 37.7806,70.2799 37.8107,70.2544 37.8334,70.1867 37.8459,70.172 37.9314,70.1996 37.9294,70.2528 37.9435,70.2904 37.9855,70.3314 38.0012,70.3794 38.0559,70.4186 38.0793,70.433 38.1002,70.5048 38.1207,70.5011 38.1491,70.5451 38.2431,70.5757 38.2725,70.5985 38.2785,70.615 38.3203,70.6109 38.3459,70.6453 38.3482,70.6906 38.3672,70.674 38.3925,70.6943 38.4184,70.7237 38.4141,70.7564 38.4271,70.7724 38.4554,70.8523 38.4391,70.8722 38.4686,70.9069 38.4391,70.9566 38.4391,70.9877 38.4902,71.0315 38.461,71.0559 38.3994,71.0887 38.4224,71.1095 38.4058,71.1657 38.3864,71.184 38.3462,71.2585 38.3095,71.3325 38.3048,71.3331 38.2715,71.3749 38.2551,71.3645 38.1979,71.3757 38.1624,71.3526 38.1502,71.3278 38.1095,71.3208 38.0676,71.2945 38.0164,71.2691 37.9902,71.274 37.9661,71.256 37.9353,71.3128 37.9197,71.3293 37.887,71.477 37.9325,71.5237 37.951,71.5898 37.9226,71.598 37.8722,71.5865 37.8479,71.5901 37.7976,71.5585 37.7875,71.5309 37.7632,71.5508 37.736,71.5302 37.6807,71.526 37.6311,71.4947 37.5392,71.5265 37.4799,71.5035 37.4517,71.4751 37.3872,71.4953 37.3691,71.494 37.3005,71.4814 37.2309,71.4555 37.2153,71.4617 37.1853,71.4413 37.1192,71.431 37.0586,71.4676 37.0073,71.4666 36.9499,71.5117 36.9025,71.5388 36.8508,71.5636 36.7632,71.6191 36.7132,71.6341 36.6905,71.6715 36.6727,71.8427 36.6821,71.9022 36.7321,71.9579 36.7566,72.0689 36.84,72.1152 36.8486,72.1308 36.873,72.1941 36.9057,72.2427 36.9444,72.3084 36.9645,72.3438 36.9894,72.4036 36.9911,72.4407 37.0071,72.4741 36.9953,72.5263 36.9981,72.587 37.0102,72.6205 37.0279,72.6736 37.022,72.6819 37.0517,72.7388 37.1195,72.776 37.1959,72.8168 37.2325,72.8547 37.2291,72.8915 37.2437,72.9546 37.2916,73.0932 37.3247,73.1063 37.3625,73.13 37.3708,73.1498 37.4051,73.2159 37.406,73.2575 37.4392,73.3057 37.464,73.3653 37.4616,73.3723 37.4425,73.4187 37.4672,73.4542 37.4742,73.5325 37.4722,73.5813 37.447,73.6511 37.4357,73.6833 37.4493,73.7758 37.4396,73.7705 37.407,73.775 37.3386,73.7047 37.3081,73.655 37.3152,73.6299 37.2506,73.6565 37.2373,73.6882 37.2531,73.725 37.2462,73.7387 37.2273,73.7807 37.2382,73.805 37.2269,73.8429 37.2357,73.851 37.257,73.9209 37.287,73.9534 37.2756,73.9645 37.2988,74.0059 37.2871,74.0725 37.3195,74.184 37.3348,74.2281 37.3546,74.2445 37.4155,74.3162 37.3991,74.3754 37.4242,74.3905 37.3969,74.4198 37.3895,74.4831 37.4121,74.5264 37.4114,74.5631 37.383,74.6729 37.3996,74.7081 37.396,74.802 37.372,74.8298 37.3473,74.8411 37.2975,74.8857 37.2472,74.8854 37.2333,74.8076 37.2057,74.7915 37.2391,74.7463 37.276,74.7146 37.2753,74.6723 37.2511,74.5892 37.2505,74.5659 37.2317,74.5412 37.242,74.5009 37.2348,74.4871 37.1725,74.4605 37.1257,74.489 37.1105,74.4936 37.0796,74.5266 37.0754,74.5339 37.0431,74.5611 37.0273,74.5145 37.0087,74.4988 36.9812,74.4285 37.0077,74.4146 36.9759,74.3497 36.9624,74.3093 36.9191,74.2422 36.8951,74.1795 36.9165,74.1169 36.8377,74.0628 36.84,74.0468 36.8263,73.9566 36.8434,73.8893 36.9124,73.8318 36.9223,73.8253 36.898,73.7997 36.89,73.7532 36.9109,73.7166 36.9045,73.6724 36.9115,73.6265 36.8976,73.6008 36.9088,73.5742 36.8891,73.4168 36.8927,73.3778 36.8807,73.3294 36.8899,73.3082 36.8685,73.2678 36.8916,73.2527 36.8827,73.1767 36.8789,73.1474 36.8946,73.1195 36.8808,73.0815 36.8865,73.0407 36.8603,72.9991 36.8601,72.9685 36.8755,72.9428 36.8691,72.9287 36.8431,72.7753 36.8439,72.7521 36.8548,72.7179 36.8371,72.6531 36.8526,72.5625 36.8308,72.503 36.7835,72.4454 36.7743,72.4204 36.7818,72.3933 36.7623,72.3323 36.7537,72.298 36.74,72.2547 36.7526,72.1781 36.7081,72.214 36.6694,72.0952 36.6475,72.0773 36.5933,72.0318 36.5918,71.9992 36.5567,71.9306 36.5441,71.9153 36.5093,71.8041 36.5029,71.7977 36.4832,71.8209 36.415,71.7883 36.4045,71.7301 36.4481,71.6608 36.4778,71.6375 36.4768,71.6257 36.4195,71.597 36.3905,71.5587 36.3717,71.5832 36.3454,71.5661 36.3268,71.5258 36.3342,71.5086 36.301,71.443 36.2669,71.4342 36.2317,71.3625 36.2033,71.3484 36.1694,71.3187 36.1688,71.2447 36.1138,71.2175 36.0871,71.1973 36.0402,71.2313 36.0269,71.2572 36.0004,71.286 35.9986,71.3209 35.9599,71.3695 35.9672,71.3963 35.8913,71.4313 35.8878,71.4789 35.8116,71.4847 35.7683,71.513 35.7352,71.5513 35.724,71.5381 35.6709,71.5056 35.6589,71.4994 35.632,71.5223 35.6056,71.6205 35.5653,71.5932 35.5017,71.6556 35.4443,71.6368 35.4098,71.6082 35.3922,71.5788 35.3466,71.5437 35.3102,71.5618 35.2814,71.615 35.2467,71.6323 35.2261,71.681 35.2156,71.6204 35.1394,71.5986 35.1422,71.5354 35.0955,71.5429 35.0426,71.5547 35.0251,71.5036 35.0035,71.5091 34.9749,71.4748 34.9508,71.4339 34.9445,71.3855 34.9174,71.3494 34.9143,71.2944 34.872,71.2889 34.8213,71.2499 34.792,71.2235 34.7513,71.1857 34.7474,71.1501 34.7138,71.1125 34.7049,71.0893 34.6735,71.1128 34.6256,71.086 34.5857,71.0397 34.5731,71.0146 34.5399,71.0144 34.485,71.024 34.4525,71.0571 34.4254,71.106 34.4338,71.1312 34.4031,71.1171 34.3776,71.1728 34.3646,71.1524 34.297,71.1264 34.2777,71.1207 34.2398,71.1366 34.2228,71.1299 34.1657,71.0729 34.11,71.0838 34.0709,71.0622 34.0515,71.0342 34.056,71.0093 34.0289,70.9655 34.0288,70.8814 33.9735,70.8238 33.9792,70.7803 33.9624,70.6872 33.9627,70.6431 33.9528,70.5822 33.9612,70.545 33.9435,70.4615 33.9443,70.4177 33.9662,70.3651 33.9619,70.3044 33.97,70.2863 33.9826,70.2455 33.9757,70.1942 33.9827,70.1487 34.0138,70.0876 34.0089,70.0524 34.0326,69.9926 34.0472,69.9816 34.037,69.9107 34.0404,69.8896 34.019,69.9024 33.9826,69.8614 33.9663,69.8598 33.9263,69.8794 33.9203,69.9158 33.8843,69.9175 33.8514,69.9496 33.8335,69.9734 33.7592,70.008 33.7291,70.044 33.7351,70.0876 33.7172,70.1308 33.7223,70.1508 33.6961,70.1456 33.6581,70.1823 33.6411,70.1966 33.611,70.1724 33.542,70.174 33.5184,70.2427 33.4698,70.2503 33.4379,70.2949 33.428,70.3227 33.3879,70.3268 33.351,70.2252 33.2595,70.1744 33.2393,70.1256 33.2107,70.0585 33.2116,70.0551 33.1922,70.0191 33.1424,69.9408 33.1258,69.9261 33.107,69.8757 33.0944,69.8403 33.1002,69.7843 33.1268,69.7354 33.1127,69.7248 33.0949,69.6219 33.1008,69.5729 33.0984,69.5604 33.0748,69.4955 33.0199,69.495 32.936,69.502 32.8879,69.5386 32.8711,69.4707 32.8538,69.4308 32.8011,69.3911 32.7797,69.3908 32.762,69.424 32.7276,69.4502 32.6727,69.4489 32.6502,69.3856 32.5664,69.304 32.5423,69.2757 32.5225,69.2389 32.4535,69.2521 32.4045,69.2808 32.3545,69.2794 32.291,69.2711 32.259,69.2761 32.1254,69.2937 32.0861,69.2944 32.0173,69.3128 31.9869,69.3258 31.9284,69.2751 31.9092,69.273 31.8925,69.1964 31.8327,69.1134 31.7081,69.0734 31.6739,69.0479 31.6656,69.0226 31.6304,68.9933 31.6281,68.9606 31.6489,68.9369 31.6103,68.8539 31.5953,68.8379 31.6102,68.79 31.6227,68.7817 31.6647,68.7528 31.6681,68.7192 31.7089,68.7071 31.7716,68.6439 31.7767,68.5784 31.8321,68.5556 31.8241,68.4763 31.7739,68.4627 31.7493,68.5227 31.7576,68.5902 31.7535,68.5644 31.7147,68.5231 31.7354,68.4611 31.7353,68.429 31.7559,68.376 31.7596,68.2815 31.7571,68.2556 31.784,68.2653 31.8023,68.182 31.8169,68.1664 31.8315,68.1139 31.7511,68.0714 31.7162,68.0465 31.683,67.9813 31.6425,67.8576 31.6235,67.8209 31.6008,67.8019 31.5737,67.7684 31.5576,67.7493 31.5326,67.7161 31.5143,67.6552 31.5174,67.6378 31.5325,67.6013 31.5237,67.5873 31.5041,67.6078 31.4505,67.651 31.392,67.7492 31.4158,67.7972 31.3825,67.7972 31.3403,67.7656 31.3172,67.7232 31.3265,67.6495 31.2775,67.5535 31.2627,67.486 31.2327,67.4678 31.2377,67.4032 31.2118,67.2734 31.2003,67.2228 31.2248,67.1767 31.2304,67.1534 31.2476,67.0679 31.2143,67.0249 31.2558,67.0555 31.2906,67.0373 31.3101,67.006 31.302,66.9569 31.3082,66.874 31.283,66.8349 31.2653,66.8119 31.2214,66.7707 31.2001,66.7337 31.2096,66.7164 31.1863,66.7141 31.1524,66.6938 31.1191,66.6915 31.0754,66.6743 31.0678,66.578 30.9772,66.4318 30.9549,66.3928 30.9387,66.2897 30.5847,66.288 30.5267,66.3545 30.4682,66.3408 30.4487,66.3654 30.4194,66.3473 30.3935,66.3395 30.3107,66.3286 30.2965,66.3248 30.2446,66.2869 30.1697,66.2883 30.1507,66.2581 30.0941,66.2318 30.0629,66.3737 29.971,66.3298 29.9192,66.2475 29.848,66.013 29.7862,65.9527 29.7666,65.8146 29.7316,65.1864 29.5688,65.0608 29.5351,64.5719 29.5878,64.543 29.5876,64.479 29.5598,64.4224 29.5467,64.3844 29.5469,64.3477 29.5263,64.2687 29.5229,64.2324 29.4867,64.1624 29.4699,64.1437 29.4377,64.1702 29.4131,64.1583 29.3924,64.1015 29.38,64.0532 29.4076,64.0044 29.4182,63.582 29.4851,63.5559 29.4856,63.3479 29.4678,63.2883 29.4468,63.2299 29.4638,62.75 29.4114,62.4646 29.379,62.124 29.4844,60.8738 29.859,61.2125 30.2164,61.4238 30.441,61.8086 30.8397,61.7849 30.9208,61.831 30.9725,61.8253 30.9943,61.8393 31.037,61.8322 31.0837,61.815 31.1081,61.8072 31.164,61.7768 31.2135,61.7704 31.248,61.7772 31.3016,61.705 31.3761,61.4548 31.4092,60.8595 31.4855,60.8162 31.71,60.8182 31.8867,60.8291 31.9275,60.8316 31.9878,60.8227 32.031,60.8424 32.0674,60.8787 32.2024,60.8577 32.2671,60.8134 32.4816,60.7106 32.7017,60.6356 32.9996,60.5837 33.127,60.6341 33.2264,60.7552 33.34,60.8213 33.3965,60.8663 33.4201,60.8529 33.4875,60.8814 33.5048,60.9293 33.4987,60.944 33.5162,60.8989 33.541,60.7747 33.5321,60.6599 33.5359,60.6305 33.5786,60.5454 33.73,60.5688 33.8197,60.4744 34.0736,60.5548 34.1686,60.5597 34.1857,60.6257 34.2468,60.6699 34.2712,60.6884 34.3141,60.7339 34.3092,60.8426 34.3109,60.892 34.3282,60.8685 34.3533,60.804 34.4738,60.7555 34.5094,60.7454 34.5276,60.8202 34.5438,60.8545 34.5407,60.9014 34.5689,60.9268 34.6211,60.9848 34.62,61.0027 34.643,61.0058 34.7237,61.0439 34.7588,61.0695 34.8149,61.0651 34.8414,61.0713 34.9214,61.0982 34.9672,61.1016 35.022,61.1198 35.0747,61.1412 35.0732,61.1318 35.135,61.0938 35.1844,61.0976 35.2729,61.1893 35.2923,61.1764 35.3568,61.1871 35.3986,61.2321 35.4324,61.2367 35.4712,61.277 35.5191,61.27 35.5605,61.2753 35.6056))&quot;</value>
                  <value>34.023000000000003</value>
                  <value>65.526700000000005</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='bar_graph'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]</field>
                      <field>[federated.1xffl5c17hiaw317g553j050gt59].[none:Country:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1xffl5c17hiaw317g553j050gt59].[none:Country:nk]</field>
                    <field>[federated.1xffl5c17hiaw317g553j050gt59].[none:Virus:nk]</field>
                    <field>[federated.1xffl5c17hiaw317g553j050gt59].[sum:ConfirmCases:qk]</field>
                    <field>[federated.1xffl5c17hiaw317g553j050gt59].[attr:Date:ok]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;United States of America&quot;</value>
                  <value>&quot;H1N1&quot;</value>
                  <value>33902</value>
                  <value>#2009-07-06#</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='linegraph'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='17' />
      <simple-id uuid='{7884A222-B96F-4400-B04E-227C2F9FF9DF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      7PrDNcHaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='H1N1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      GqN/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='bar_graph' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='linegraph' width='192'>
      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
      QZMAiIL2/wF0ne6SgCAoBQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
